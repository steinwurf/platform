concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
env:
  EXTRA_RESOLVE_OPTIONS: ${{ github.event.inputs.extra_resolve_options }}
jobs:
  windows_mkspec:
    name: ${{ matrix.config.name }}
    runs-on:
    - self-hosted
    - ${{ matrix.config.cxx_mkspec }}
    - builder
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - env:
        GIT_SSH_COMMAND: ${{ runner.os != 'Linux' && 'ssh' || 'ssh -i /home/buildbot/.ssh/id_ed25519
          -o IdentitiesOnly=yes' }}
      name: Configure
      run: python waf configure --git_protocol=git@ --cxx_mkspec=${{ matrix.config.cxx_mkspec
        }} $EXTRA_RESOLVE_OPTIONS
    - name: Build
      run: 'echo "::add-matcher::.github/gcc-problem-matcher.json"

        python waf

        '
    - name: Test
      run: python waf --run_tests --run_cmd="%s --os=${{matrix.config.test_os}} --compiler=${{matrix.config.test_compiler}}
        --arch=${{matrix.config.test_arch}}"
    strategy:
      fail-fast: false
      matrix:
        config:
        - cxx_mkspec: cxx_msvc17_x86
          name: MSVC 17 32-bit
          test_arch: x86
          test_compiler: msvc
          test_os: windows
        - cxx_mkspec: cxx_msvc17_x64
          name: MSVC 17 64-bit
          test_arch: x86_64
          test_compiler: msvc
          test_os: windows
name: Windows C++ make-specs
'on':
  pull_request: null
  push:
    branches:
    - master
  schedule:
  - cron: 0 1 * * *
  workflow_dispatch:
    inputs:
      extra_resolve_options:
        description: Extra Resolve Options
        required: false
